import matplotlib.pyplot as plt

# –ó–Ω–∞—á–µ–Ω–∏—è –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ ùëì1 –∏ ùëì2
crit1 = [4.7, 6.5, 2.7, 3.2, 2.8, 1.6, 2.2, 5.8, 3.2, 6.0, 1.4, 4.5, 2.4, 5.7]
crit2 = [4.5, 2.2, 3.8, 1.8, 2.1, 4.8, 4.7, 5.9, 7.4, 5.0, 3.0, 2.1, 6.7, 3.8]

# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–µ—à–µ–Ω–∏–π –ø–æ –∫–∞–∂–¥–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é
sorted_crit1 = sorted(crit1)
sorted_crit2 = sorted(crit2)

# –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ–¥–æ–º–∏–Ω–∏—Ä—É–µ–º—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏–π
non_dominated = []

# –ü–æ—à–∞–≥–æ–≤–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–µ–¥–æ–º–∏–Ω–∏—Ä—É–µ–º—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
for i in range(len(sorted_crit1)):
    is_dominated = False
    for j in range(len(sorted_crit2)):
        if crit1[j] < sorted_crit1[i] and crit2[j] < sorted_crit2[i]:
            is_dominated = True  # –µ—Å–ª–∏ –Ω–∞—à–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –¥–æ–º–∏–Ω–∏—Ä—É—é—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ, —Ç–æ —Ç–µ–∫—É—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç—Å—è
            break
    if not is_dominated:
        non_dominated.append((sorted_crit1[i], sorted_crit2[i]))

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ–¥–æ–º–∏–Ω–∏—Ä—É–µ–º—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
non_dominated_crit1 = [x[0] for x in non_dominated]
non_dominated_crit2 = [x[1] for x in non_dominated]

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏ —Å –Ω–µ–¥–æ–º–∏–Ω–∏—Ä—É–µ–º—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
plt.scatter(crit1, crit2, color='b', label='–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã')
plt.scatter(non_dominated_crit1, non_dominated_crit2, color='r', label='–ù–µ–¥–æ–º–∏–Ω–∏—Ä—É–µ–º—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã')
plt.xlabel('–ö—Ä–∏—Ç–µ—Ä–∏–π ùëì1')
plt.ylabel('–ö—Ä–∏—Ç–µ—Ä–∏–π ùëì2')
plt.title('–ù–µ–¥–æ–º–∏–Ω–∏—Ä—É–µ–º—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏–π')
plt.legend()
plt.show()